{
  "openapi": "3.0.3",
  "info": {
    "title": "PC端网关服务bops",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://10.0.63.42:8080",
      "description": "Inferred Url"
    }
  ],
  "tags": [
    {
      "name": "[V2]数据权限DEMO",
      "description": "Data Permission Demo Controller"
    },
    {
      "name": "file-upload-rest",
      "description": "单调的文件上传"
    },
    {
      "name": "login-rest",
      "description": "Login Rest"
    },
    {
      "name": "rbac-controller",
      "description": "RBAC Controller"
    },
    {
      "name": "redash-api-controller",
      "description": "Redash Api Controller"
    },
    {
      "name": "saas-menu-rest",
      "description": "Saas Menu Rest"
    },
    {
      "name": "saas-role-rest",
      "description": "Saas Role Rest"
    },
    {
      "name": "saas-user-rest",
      "description": "Saas User Rest"
    },
    {
      "name": "sms-email-rest",
      "description": "saas登录相关服务操作"
    },
    {
      "name": "zat-planet-bops-application",
      "description": "Zat Planet Bops Application"
    },
    {
      "name": "企业用户信息维护-API",
      "description": "Company Controller"
    },
    {
      "name": "保单信息维护-API",
      "description": "Policy Controller"
    },
    {
      "name": "字典服务-API",
      "description": "System Dict Controller"
    },
    {
      "name": "批改信息维护-API",
      "description": "Endorse Controller"
    },
    {
      "name": "批改导入导出维护-API",
      "description": "Endorse Import Controller"
    },
    {
      "name": "文件管理",
      "description": "File Upload Controller"
    },
    {
      "name": "模板维护控制层",
      "description": "Import Template Maintain Controller"
    },
    {
      "name": "管控台——用户中心",
      "description": "Business Center Rest"
    },
    {
      "name": "组织机构导入-API",
      "description": "Agency Import Controller"
    }
  ],
  "paths": {
    "/api/bops/agency/upload/v2/agencyTemplateDownload": {
      "get": {
        "tags": [
          "组织机构导入-API"
        ],
        "summary": "机构导入模板下载",
        "operationId": "agencyTemplateDownloadUsingGET",
        "parameters": [
          {
            "name": "importType",
            "in": "query",
            "description": "importType",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«string»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/agency/upload/v2/downloadErrorMsg": {
      "post": {
        "tags": [
          "组织机构导入-API"
        ],
        "summary": "downloadErrorMsg",
        "operationId": "downloadErrorMsgUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadErrorMsgRequestVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/agency/upload/v2/importTemplate": {
      "post": {
        "tags": [
          "组织机构导入-API"
        ],
        "summary": "importTemplate",
        "operationId": "importTemplateUsingPOST",
        "parameters": [
          {
            "name": "bizNo",
            "in": "query",
            "description": "业务号或id（用于简单列表查询）",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bizUploadCondition",
            "in": "query",
            "description": "业务条件(json方式存储，各实现方反序列化）",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "公司id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "file",
            "in": "query",
            "description": "导入文件",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          {
            "name": "importType",
            "in": "query",
            "description": "导入类型",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectAccess",
            "in": "query",
            "description": "文件对象访问类型",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«long»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/agency/upload/v2/pageQueryImportHistory": {
      "post": {
        "tags": [
          "组织机构导入-API"
        ],
        "summary": "导入历史记录查询",
        "operationId": "pageQueryImportHistoryUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageImportHistoryRequestVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«PageDTO«ImportHistoryVO»»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/businessCenter/check/password": {
      "post": {
        "tags": [
          "管控台——用户中心"
        ],
        "summary": "password",
        "operationId": "passwordUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckPasswordVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«object»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/businessCenter/checkBind/phone": {
      "post": {
        "tags": [
          "管控台——用户中心"
        ],
        "summary": "校验绑定的手机号是否已经被绑定",
        "description": "校验绑定的手机号是否已经被绑定",
        "operationId": "checkBindPhoneUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckBindPhoneVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«object»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/businessCenter/query/baseInfo": {
      "post": {
        "tags": [
          "管控台——用户中心"
        ],
        "summary": "queryInfo",
        "operationId": "queryInfoUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBaseInfoVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«object»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/businessCenter/update/password": {
      "post": {
        "tags": [
          "管控台——用户中心"
        ],
        "summary": "password",
        "operationId": "passwordUsingPOST_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«object»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/company/forgetPassword": {
      "post": {
        "tags": [
          "企业用户信息维护-API"
        ],
        "summary": "忘记密码",
        "description": "新增或编辑企业用户",
        "operationId": "forgetPasswordUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechBaslCompanyVOReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«Void»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/company/getCompanyInfoDetail": {
      "get": {
        "tags": [
          "企业用户信息维护-API"
        ],
        "summary": "查询企业用户详情",
        "description": "查询企业用户详情",
        "operationId": "getCompanyInfoDetailUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id",
            "required": true,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«TechBaslCompanyVO»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/company/getCompanyListPage": {
      "post": {
        "tags": [
          "企业用户信息维护-API"
        ],
        "summary": "分页查询企业用户信息",
        "description": "分页查询企业用户信息",
        "operationId": "getCompanyListPageUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechBaslCompanyPageReqVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«PageDTO«TechBaslCompanyVO»»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/company/login": {
      "post": {
        "tags": [
          "企业用户信息维护-API"
        ],
        "summary": "企业用户信息登录",
        "description": "企业用户信息登录",
        "operationId": "loginUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechBaslCompanyVOReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«UserVO»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/company/modifyPassword": {
      "post": {
        "tags": [
          "企业用户信息维护-API"
        ],
        "summary": "企业用户修改密码",
        "description": "企业用户修改密码",
        "operationId": "modifyPasswordUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechBaslCompanyOperationVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«Void»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/company/review": {
      "post": {
        "tags": [
          "企业用户信息维护-API"
        ],
        "summary": "企业用户审核",
        "description": "企业用户审核",
        "operationId": "reviewUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechBaslCompanyOperationVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«Void»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/company/saveCompanyInfo": {
      "post": {
        "tags": [
          "企业用户信息维护-API"
        ],
        "summary": "注册或修改企业用户",
        "description": "新增或编辑企业用户",
        "operationId": "saveCompanyInfoUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechBaslCompanyAddOrEditVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«Void»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/company/userEnableOrDisable": {
      "post": {
        "tags": [
          "企业用户信息维护-API"
        ],
        "summary": "企业用户启用/停用",
        "description": "企业用户审核",
        "operationId": "userEnableOrDisableUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TechBaslCompanyOperationVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«Void»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/v2/dataPermission/dc": {
      "get": {
        "tags": [
          "[V2]数据权限DEMO"
        ],
        "summary": "dc",
        "operationId": "dcUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/v2/dataPermission/demo/{path}": {
      "post": {
        "tags": [
          "[V2]数据权限DEMO"
        ],
        "summary": "分页查询",
        "operationId": "demoUsingPOST",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataPermissionRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«DataPermissionRequestDTO»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/v2/dataPermission/demo1/{path}": {
      "post": {
        "tags": [
          "[V2]数据权限DEMO"
        ],
        "summary": "分页查询-泛型",
        "operationId": "demo1UsingPOST",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "description": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageDTO«DataPermissionRequestDTO»Req"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«PageDTO«DataPermissionRequestDTO»»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/endorse/callback": {
      "post": {
        "tags": [
          "批改信息维护-API"
        ],
        "summary": "批改状态回调",
        "description": "批改状态回调",
        "operationId": "callbackUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndorseCallbackVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«Void»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/endorse/cancelEndorse": {
      "get": {
        "tags": [
          "批改信息维护-API"
        ],
        "summary": "批改撤销",
        "description": "批改撤销",
        "operationId": "cancelEndorseUsingGET",
        "parameters": [
          {
            "name": "applicationNo",
            "in": "query",
            "description": "applicationNo",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«Void»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/endorse/downloadEndorseApply": {
      "post": {
        "tags": [
          "批改信息维护-API"
        ],
        "summary": "批改申请书下载",
        "description": "批改申请书下载",
        "operationId": "downloadEndorseApplyUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndorseSubmitReqVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«EndorseDownloadResVO»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/endorse/endorseApply": {
      "post": {
        "tags": [
          "批改信息维护-API"
        ],
        "summary": "批改申请",
        "description": "批改申请",
        "operationId": "endorseApplyUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndorseApplyReqVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«EndorseApplyResVO»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/endorse/endorsePersonOperation": {
      "post": {
        "tags": [
          "批改信息维护-API"
        ],
        "summary": "批改申请-单个新增/删除/修改人员清单",
        "description": "批改申请-单个新增/删除/修改人员清单",
        "operationId": "endorsePersonOperationUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaEndorsePersonInfoVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«Void»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/endorse/endorseSubmit": {
      "post": {
        "tags": [
          "批改信息维护-API"
        ],
        "summary": "批改提核",
        "description": "批改提核",
        "operationId": "endorseSubmitUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndorseSubmitReqVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«Void»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/endorse/getEndorseDetails": {
      "get": {
        "tags": [
          "批改信息维护-API"
        ],
        "summary": "批改记录详情查询",
        "description": "批改记录详情查询",
        "operationId": "getEndorseDetailsUsingGET",
        "parameters": [
          {
            "name": "applicationNo",
            "in": "query",
            "description": "applicationNo",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«PolicyDetailsVO»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/endorse/getEndorsePersonListPage": {
      "post": {
        "tags": [
          "批改信息维护-API"
        ],
        "summary": "批改申请（增保、减保、更新）-人员列表分页查询",
        "description": "批改申请（增保、减保、更新）-人员列表分页查询",
        "operationId": "getEndorsePersonListPageUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyPersonPageReqVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«PageDTO«PolicyPersonPageResVO»»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/endorse/getEndorseRecordListPage": {
      "post": {
        "tags": [
          "批改信息维护-API"
        ],
        "summary": "批改记录列表分页查询",
        "description": "批改记录列表分页查询",
        "operationId": "getEndorseRecordListPageUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndorseRecordReqVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«PageDTO«EndorseRecordResVO»»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/endorse/trialSubmit": {
      "post": {
        "tags": [
          "批改信息维护-API"
        ],
        "summary": "批改保费试算",
        "description": "批改保费试算",
        "operationId": "trialSubmitUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndorseSubmitReqVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«EndorseSubmitResVO»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/endorse/file/downloadErrorMsg": {
      "post": {
        "tags": [
          "批改导入导出维护-API"
        ],
        "summary": "downloadErrorMsg",
        "operationId": "downloadErrorMsgUsingPOST_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadErrorMsgRequestVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/endorse/file/downloadTemplate": {
      "post": {
        "tags": [
          "批改导入导出维护-API"
        ],
        "summary": "人员清单模板下载",
        "description": "人员清单模板下载",
        "operationId": "downloadTemplateUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndorseTemplateReqVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«string»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/endorse/file/importTemplate": {
      "post": {
        "tags": [
          "批改导入导出维护-API"
        ],
        "summary": "importTemplate",
        "operationId": "importTemplateUsingPOST_1",
        "parameters": [
          {
            "name": "bizNo",
            "in": "query",
            "description": "业务号或id（用于简单列表查询）",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bizUploadCondition",
            "in": "query",
            "description": "业务条件(json方式存储，各实现方反序列化）",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "公司id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "file",
            "in": "query",
            "description": "导入文件",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          {
            "name": "importType",
            "in": "query",
            "description": "导入类型",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectAccess",
            "in": "query",
            "description": "文件对象访问类型",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«long»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/endorse/file/pageQueryImportHistory": {
      "post": {
        "tags": [
          "批改导入导出维护-API"
        ],
        "summary": "批改人员清单导入历史记录查询",
        "operationId": "pageQueryImportHistoryUsingPOST_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageImportHistoryRequestVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«PageDTO«ImportHistoryVO»»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/file/v2/upload": {
      "post": {
        "tags": [
          "文件管理"
        ],
        "summary": "上传",
        "description": "上传",
        "operationId": "uploadUsingPOST_1",
        "parameters": [
          {
            "name": "objectAccess",
            "in": "query",
            "description": "objectAccess",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«string»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/file/v2/uploadFile": {
      "post": {
        "tags": [
          "文件管理"
        ],
        "summary": "上传",
        "description": "上传",
        "operationId": "uploadUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«OssFileDTO»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/file/v2/uploadWithToken": {
      "post": {
        "tags": [
          "文件管理"
        ],
        "summary": "上传",
        "description": "上传",
        "operationId": "uploadWithTokenUsingPOST",
        "parameters": [
          {
            "name": "objectAccess",
            "in": "query",
            "description": "objectAccess",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«string»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rest/file/upload": {
      "post": {
        "tags": [
          "file-upload-rest"
        ],
        "summary": "上传",
        "description": "上传",
        "operationId": "uploadUsingPOST_2",
        "parameters": [
          {
            "name": "bucketFlag",
            "in": "query",
            "description": "bucketFlag",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rest/file/uploadAppointFileName": {
      "post": {
        "tags": [
          "file-upload-rest"
        ],
        "summary": "上传文件(文件名为上传文件名)",
        "description": "上传文件(文件名为上传文件名)",
        "operationId": "uploadAppointFileNameUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rest/file/uploadFile": {
      "post": {
        "tags": [
          "file-upload-rest"
        ],
        "summary": "上传文件",
        "description": "上传文件)",
        "operationId": "uploadFileUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«UploadFileRespVO»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rest/file/uploadFileByUrl": {
      "get": {
        "tags": [
          "file-upload-rest"
        ],
        "summary": "通过url上传公众号图片",
        "description": "通过url上传公众号图片",
        "operationId": "uploadFileByUrlUsingGET",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "description": "url",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«string»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rest/file/uploadForThumbnail": {
      "post": {
        "tags": [
          "file-upload-rest"
        ],
        "summary": "上传（返回原图和缩略图地址）",
        "description": "上传",
        "operationId": "uploadForThumbnailUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«string»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/import/template/file/policyUpload": {
      "post": {
        "tags": [
          "模板维护控制层"
        ],
        "summary": "保单文件上传",
        "description": "保单文件上传",
        "operationId": "policyUploadUsingPOST",
        "parameters": [
          {
            "name": "objectAccess",
            "in": "query",
            "description": "objectAccess",
            "required": true,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«UploadResultVO对象»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rest/forget/loginpwd": {
      "post": {
        "tags": [
          "login-rest"
        ],
        "summary": "saas会员忘记登录密码",
        "description": "saas会员忘记登录密码",
        "operationId": "restLoginPwdUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserReSetPwdVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«object»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rest/getFrontDomainName": {
      "post": {
        "tags": [
          "login-rest"
        ],
        "summary": "获取前端域名",
        "description": "获取前端域名",
        "operationId": "getFrontDomainNameUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«FrontDomainNameResVO»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rest/login": {
      "post": {
        "tags": [
          "login-rest"
        ],
        "summary": "saas会员登录",
        "description": "会员登录",
        "operationId": "loginUsingPOST_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«object»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rest/login/user": {
      "post": {
        "tags": [
          "login-rest"
        ],
        "summary": "saas会员登录-会员信息获取",
        "description": "saas会员登录-会员信息获取",
        "operationId": "getLoginUserUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginQueryVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«UserVO»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rest/login/userIfExists": {
      "post": {
        "tags": [
          "login-rest"
        ],
        "summary": "saas会员登录-判断账号是否存在",
        "description": "saas会员登录-判断账号是否存在",
        "operationId": "userIfExistsUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginQueryVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«object»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rest/login/validate/success": {
      "post": {
        "tags": [
          "login-rest"
        ],
        "summary": "saas会员登录-安全验证通过",
        "description": "会员登录-安全验证通过",
        "operationId": "loginValidateSuccessUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«object»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rest/loginUserInfo": {
      "post": {
        "tags": [
          "login-rest"
        ],
        "summary": "获取登录用户信息",
        "description": "获取登录用户信息",
        "operationId": "loginUserInfoUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«JwtUserVO»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rest/logout": {
      "get": {
        "tags": [
          "login-rest"
        ],
        "summary": "saas会员登出",
        "description": "saas会员登出",
        "operationId": "logoutUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«object»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rest/modifyPassword": {
      "post": {
        "tags": [
          "login-rest"
        ],
        "summary": "后台用户修改密码",
        "description": "后台用户修改密码",
        "operationId": "modifyPasswordUsingPOST_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaasUserModifyVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«Void»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rest/sendSms": {
      "post": {
        "tags": [
          "login-rest"
        ],
        "summary": "saas-发送短信验证码",
        "description": "saas-短信邮件发送",
        "operationId": "sendSmsUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendSmsCodeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«object»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/policy/downloadFile": {
      "post": {
        "tags": [
          "保单信息维护-API"
        ],
        "summary": "保单文件下载-电子保单",
        "description": "保单文件下载-电子保单",
        "operationId": "downloadFileUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyReqVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«PolicyResVO»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/policy/exportPolicyPerson": {
      "post": {
        "tags": [
          "保单信息维护-API"
        ],
        "summary": "保单详情-人员清单导出",
        "description": "保单详情-人员清单导出",
        "operationId": "exportPolicyPersonUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyPersonPageReqVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«string»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/policy/getElecInvoiceList": {
      "get": {
        "tags": [
          "保单信息维护-API"
        ],
        "summary": "电子发票列表查询",
        "description": "电子发票列表查询",
        "operationId": "getElecInvoiceListUsingGET",
        "parameters": [
          {
            "name": "policyNo",
            "in": "query",
            "description": "policyNo",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«List«ElecInvoiceVO»»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/policy/getPolicyDetails": {
      "post": {
        "tags": [
          "保单信息维护-API"
        ],
        "summary": "保单详情页查询",
        "description": "保单详情页查询",
        "operationId": "getPolicyDetailsUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyReqVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«PolicyDetailsVO»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/policy/getPolicyListPage": {
      "post": {
        "tags": [
          "保单信息维护-API"
        ],
        "summary": "保单列表分页查询",
        "description": "保单列表分页查询",
        "operationId": "getPolicyListPageUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyPageReqVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«PageDTO«PolicyResVO»»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/policy/getPolicyPersonListPage": {
      "post": {
        "tags": [
          "保单信息维护-API"
        ],
        "summary": "保单详情-人员清单列表分页查询",
        "description": "保单详情-人员清单列表分页查询",
        "operationId": "getPolicyPersonListPageUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyPersonPageReqVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«PageDTO«PolicyPersonPageResVO»»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/policy/pageExportHistory": {
      "post": {
        "tags": [
          "保单信息维护-API"
        ],
        "summary": "导出历史记录分页查询",
        "operationId": "pageExportHistoryUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageFileDownloadRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«PageDTO«CommonFileDownloadLogVO»»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/menu/form": {
      "get": {
        "tags": [
          "rbac-controller"
        ],
        "summary": "menuForm",
        "operationId": "menuFormUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/menu/list": {
      "get": {
        "tags": [
          "rbac-controller"
        ],
        "summary": "menuList",
        "operationId": "menuListUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/role/form": {
      "get": {
        "tags": [
          "rbac-controller"
        ],
        "summary": "roleForm",
        "operationId": "roleFormUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/role/list": {
      "get": {
        "tags": [
          "rbac-controller"
        ],
        "summary": "roleList",
        "operationId": "roleListUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "saas-role-rest"
        ],
        "summary": "角色列表",
        "description": "角色列表",
        "operationId": "saasRoleListUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/post请求分页VO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«PageInfo«object»»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/user/form": {
      "get": {
        "tags": [
          "rbac-controller"
        ],
        "summary": "userForm",
        "operationId": "userFormUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/user/list": {
      "get": {
        "tags": [
          "rbac-controller"
        ],
        "summary": "userList",
        "operationId": "userListUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "saas-user-rest"
        ],
        "summary": "用户列表",
        "description": "用户列表",
        "operationId": "saasUserListUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/post请求分页VO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«PageInfo«AccountUserVO»»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/user/pwd/form": {
      "get": {
        "tags": [
          "rbac-controller"
        ],
        "summary": "userPwdForm",
        "operationId": "userPwdFormUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/user/role": {
      "get": {
        "tags": [
          "rbac-controller"
        ],
        "summary": "userRole",
        "operationId": "userRoleUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/redash/**": {
      "get": {
        "tags": [
          "redash-api-controller"
        ],
        "summary": "forward",
        "operationId": "forwardUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "redash-api-controller"
        ],
        "summary": "forward",
        "operationId": "forwardUsingPUT",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "redash-api-controller"
        ],
        "summary": "forward",
        "operationId": "forwardUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "redash-api-controller"
        ],
        "summary": "forward",
        "operationId": "forwardUsingDELETE",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "options": {
        "tags": [
          "redash-api-controller"
        ],
        "summary": "forward",
        "operationId": "forwardUsingOPTIONS",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "head": {
        "tags": [
          "redash-api-controller"
        ],
        "summary": "forward",
        "operationId": "forwardUsingHEAD",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "redash-api-controller"
        ],
        "summary": "forward",
        "operationId": "forwardUsingPATCH",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "trace": {
        "tags": [
          "redash-api-controller"
        ],
        "summary": "forward",
        "operationId": "forwardUsingTRACE",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/bops/rbac/addResourceClickCnt": {
      "post": {
        "tags": [
          "saas-menu-rest"
        ],
        "summary": "统计资源点击次数",
        "operationId": "addResourceClickCntUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceStatisticsVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/menu/links": {
      "post": {
        "tags": [
          "saas-menu-rest"
        ],
        "summary": "查询所有的菜单列表(包括按钮)",
        "description": "查询所有的菜单列表(包括按钮)",
        "operationId": "listAllResourceUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListAllResourceReqVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«List«MenuVO»»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/menu/listUserMenu": {
      "post": {
        "tags": [
          "saas-menu-rest"
        ],
        "summary": "用户菜单/按钮列表",
        "description": "用户菜单/按钮列表",
        "operationId": "listUserMenuUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListUserResourceReqVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«List«MenuVO»»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/role/add": {
      "post": {
        "tags": [
          "saas-role-rest"
        ],
        "summary": "增加角色",
        "description": "增加角色信息",
        "operationId": "saveUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleAddVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«object»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/role/delete": {
      "post": {
        "tags": [
          "saas-role-rest"
        ],
        "summary": "删除角色",
        "description": "删除角色",
        "operationId": "deleteUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleDeleteVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«object»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/role/queryById": {
      "post": {
        "tags": [
          "saas-role-rest"
        ],
        "summary": "根据id获取角色信息",
        "description": "根据id获取角色信息",
        "operationId": "infoUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleQueryByIdVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«RoleVO»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/role/roleUserRelIfExists": {
      "post": {
        "tags": [
          "saas-role-rest"
        ],
        "summary": "判断角色否关联用户",
        "description": "判断角色否关联用户",
        "operationId": "roleUserRelIfExistsUsingPOST",
        "parameters": [
          {
            "name": "roleId",
            "in": "query",
            "description": "roleId",
            "required": true,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«boolean»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/role/update": {
      "post": {
        "tags": [
          "saas-role-rest"
        ],
        "summary": "修改角色",
        "description": "修改角色",
        "operationId": "updateUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«object»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/user/detail": {
      "post": {
        "tags": [
          "saas-user-rest"
        ],
        "summary": "查询用户详情",
        "description": "根据用户id查询用户详情信息",
        "operationId": "saasUserListUsingPOST_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaasUserDetailRequestVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«AccountUserVO»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/user/invalidBatch": {
      "post": {
        "tags": [
          "saas-user-rest"
        ],
        "summary": "批量失效用户",
        "description": "批量删除用户",
        "operationId": "invalidBatchUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaasUserInvalidDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«object»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/user/menu": {
      "get": {
        "tags": [
          "saas-user-rest"
        ],
        "summary": "用户菜单列表",
        "description": "用户菜单列表",
        "operationId": "menuUsingGET",
        "parameters": [
          {
            "name": "hideInMenu",
            "in": "query",
            "description": "hideInMenu",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«List«MenuVO»»"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/user/queryUserOptLog": {
      "post": {
        "tags": [
          "saas-user-rest"
        ],
        "summary": "查询用户操作日志",
        "description": "查询用户操作日志",
        "operationId": "queryUserOptLogUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/post请求分页VO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«PageInfo«UserLogVO»»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/user/restpassed": {
      "post": {
        "tags": [
          "saas-user-rest"
        ],
        "summary": "重置密码",
        "description": "重置密码",
        "operationId": "restPasswordUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«object»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/user/save": {
      "post": {
        "tags": [
          "saas-user-rest"
        ],
        "summary": "新增用户",
        "description": "新增用户",
        "operationId": "saveUsingPOST_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaasUserAddVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«Void»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/user/unbindPhone": {
      "post": {
        "tags": [
          "saas-user-rest"
        ],
        "summary": "解绑手机号",
        "description": "解绑手机号",
        "operationId": "unbindPhoneUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnbindPhoneVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«UserDTO»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/user/update": {
      "post": {
        "tags": [
          "saas-user-rest"
        ],
        "summary": "修改用户",
        "description": "修改用户",
        "operationId": "updateUsingPOST_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaasUserUpdateVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«UserDTO»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/rbac/user/userEnableOrDisable": {
      "post": {
        "tags": [
          "saas-user-rest"
        ],
        "summary": "用户账户启用/停用",
        "description": "用户账户启用/停用",
        "operationId": "userEnableOrDisableUsingPOST_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaasUserEnableOrDisableVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«UserDTO»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/smsemail/send": {
      "post": {
        "tags": [
          "sms-email-rest"
        ],
        "summary": "saas-短信邮件发送",
        "description": "saas-短信邮件发送",
        "operationId": "resetPwdSendSmsUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SmsEmailVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«object»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/smsemail/validate": {
      "post": {
        "tags": [
          "sms-email-rest"
        ],
        "summary": "验证短信验证码",
        "description": "验证短信验证码",
        "operationId": "validateSmsCodeUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SmsEmailValidateVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«object»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/bops/system/dict/v1/queryDictInfo": {
      "post": {
        "tags": [
          "字典服务-API"
        ],
        "summary": "查询字典信息",
        "description": "当传入字典编码不为空时,获取指定的字典项,否则获取当前租户定制字典项",
        "operationId": "queryDictInfoUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DictListReqVO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result«List«DictRespVO»»"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "zat-planet-bops-application"
        ],
        "summary": "index",
        "operationId": "indexUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "zat-planet-bops-application"
        ],
        "summary": "index",
        "operationId": "indexUsingPUT",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "zat-planet-bops-application"
        ],
        "summary": "index",
        "operationId": "indexUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "zat-planet-bops-application"
        ],
        "summary": "index",
        "operationId": "indexUsingDELETE",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "options": {
        "tags": [
          "zat-planet-bops-application"
        ],
        "summary": "index",
        "operationId": "indexUsingOPTIONS",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "head": {
        "tags": [
          "zat-planet-bops-application"
        ],
        "summary": "index",
        "operationId": "indexUsingHEAD",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "zat-planet-bops-application"
        ],
        "summary": "index",
        "operationId": "indexUsingPATCH",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "trace": {
        "tags": [
          "zat-planet-bops-application"
        ],
        "summary": "index",
        "operationId": "indexUsingTRACE",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "zat-planet-bops-application"
        ],
        "summary": "healthCheck",
        "operationId": "healthCheckUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountUserVO": {
        "title": "AccountUserVO",
        "type": "object",
        "properties": {
          "agencyDataPermissionType": {
            "type": "string",
            "enum": [
              "SAME_TO_ITS_AGENCY",
              "SELF_DEFINED"
            ]
          },
          "agencyId": {
            "type": "integer",
            "format": "int64"
          },
          "agencyLevel": {
            "type": "string"
          },
          "agencyName": {
            "type": "string"
          },
          "authAgencyIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "authUserId": {
            "type": "integer",
            "format": "int64"
          },
          "birth": {
            "type": "string",
            "format": "date-time"
          },
          "certiBackUrl": {
            "type": "string"
          },
          "certiHandHeldFrontUrl": {
            "type": "string"
          },
          "certiNo": {
            "type": "string"
          },
          "certiPositiveUrl": {
            "type": "string"
          },
          "channelCode": {
            "type": "string"
          },
          "channelId": {
            "type": "integer",
            "format": "int64"
          },
          "channelName": {
            "type": "string"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyDTO"
          },
          "companyAddress": {
            "type": "string"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "dataStatus": {
            "type": "string",
            "enum": [
              "CANCEL",
              "DELETE",
              "LOCK",
              "NORMAL",
              "UNKNOWN"
            ]
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "enName": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "gmtCreated": {
            "type": "string",
            "description": "创建时间",
            "format": "date-time"
          },
          "gmtModified": {
            "type": "string",
            "description": "更新时间",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "isLeader": {
            "type": "string"
          },
          "jobno": {
            "type": "string"
          },
          "lastLoginIp": {
            "type": "string"
          },
          "lastLoginTime": {
            "type": "string",
            "format": "date-time"
          },
          "modifier": {
            "type": "string",
            "description": "更新人"
          },
          "phone": {
            "type": "string",
            "description": "手机号"
          },
          "photo": {
            "type": "string"
          },
          "pid": {
            "type": "integer",
            "format": "int64"
          },
          "registerType": {
            "type": "string"
          },
          "remarks": {
            "type": "string"
          },
          "roleIdList": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "roleInfoList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleInfoDTO"
            }
          },
          "roleName": {
            "type": "string",
            "description": "账户角色"
          },
          "salesChannelDataPermissionType": {
            "type": "string",
            "enum": [
              "ALL",
              "SELF_DEFINED"
            ]
          },
          "service": {
            "type": "string"
          },
          "showPrivacy": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "integer",
            "format": "int32"
          },
          "subAgencyId": {
            "type": "integer",
            "format": "int64"
          },
          "tenantCode": {
            "type": "integer",
            "format": "int64"
          },
          "tenantId": {
            "type": "integer",
            "format": "int64"
          },
          "token": {
            "type": "string"
          },
          "userName": {
            "type": "string",
            "description": "登录账号"
          },
          "userStatus": {
            "type": "string",
            "description": "账户状态 0.启用 1.停用"
          },
          "validEndDate": {
            "type": "string"
          },
          "validStartDate": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "workPhone": {
            "type": "string"
          },
          "zhName": {
            "type": "string",
            "description": "使用人"
          }
        }
      },
      "AdditionalLiabilityVO": {
        "title": "AdditionalLiabilityVO",
        "type": "object",
        "properties": {
          "additionalClause": {
            "type": "string",
            "description": "附加险条款名称"
          },
          "aggregateLimit": {
            "type": "string",
            "description": "累计责任限额（元）"
          },
          "deductible": {
            "type": "string",
            "description": "免赔额（元）/赔付比例（%）"
          },
          "perOccurrenceLiabilityLimit": {
            "type": "string",
            "description": "每次事故责任限额（元）"
          },
          "perPersonInjuryLiabilityLimit": {
            "type": "string",
            "description": "每人伤亡责任限额（元）"
          },
          "policyNumber": {
            "type": "string",
            "description": "方案号"
          }
        },
        "description": "雇主责任险附加险责任信息模型"
      },
      "AppDictItemRespVO": {
        "title": "AppDictItemRespVO",
        "type": "object",
        "properties": {
          "children": {
            "type": "array",
            "description": "子字典",
            "items": {
              "$ref": "#/components/schemas/AppDictItemRespVO"
            }
          },
          "code": {
            "type": "string",
            "description": "代码"
          },
          "extra": {
            "type": "string",
            "description": "扩展信息"
          },
          "name": {
            "type": "string",
            "description": "名称"
          },
          "value": {
            "type": "string",
            "description": "值"
          }
        },
        "description": "字典明细"
      },
      "BaEndorsePersonInfoVO": {
        "title": "BaEndorsePersonInfoVO",
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "住所/单位地址"
          },
          "admissionDate": {
            "type": "string",
            "description": "入学日期,格式：yyyy-MM-dd"
          },
          "age": {
            "type": "integer",
            "description": "年龄",
            "format": "int32"
          },
          "barkup": {
            "type": "string",
            "description": "备注"
          },
          "birthday": {
            "type": "string",
            "description": "出生年月,格式：yyyy-MM-dd"
          },
          "certNo": {
            "type": "string",
            "description": "身份证号码"
          },
          "certType": {
            "type": "string",
            "description": "证件类型"
          },
          "certValidityPeriodEnd": {
            "type": "string",
            "description": "证件有效期止,格式：yyyy-MM-dd"
          },
          "className": {
            "type": "string",
            "description": "班级（专业）"
          },
          "contact": {
            "type": "string",
            "description": "联系方式"
          },
          "creator": {
            "type": "string",
            "description": "创建人"
          },
          "employeeType": {
            "type": "string",
            "description": "雇员工种"
          },
          "endorseApplyId": {
            "type": "integer",
            "description": "批改申请id，新增人员、修改人员必传",
            "format": "int64"
          },
          "gmtCreated": {
            "type": "string",
            "description": "创建时间",
            "format": "date-time"
          },
          "gmtModified": {
            "type": "string",
            "description": "上一次修改时间",
            "format": "date-time"
          },
          "gradeName": {
            "type": "string",
            "description": "年级"
          },
          "hasNewCitizen": {
            "type": "string",
            "description": "是否是新市民：Y-是；N-否"
          },
          "health": {
            "type": "string",
            "description": "身体状况"
          },
          "holderRelation": {
            "type": "string",
            "description": "与投保人关系"
          },
          "id": {
            "type": "integer",
            "description": "主键id，修改必传",
            "format": "int64"
          },
          "idList": {
            "type": "array",
            "description": "主键id集合，删除必传",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "isDeleted": {
            "type": "string",
            "description": "是否删除 N-未删除 Y-已删除（逻辑删除）"
          },
          "jobPosition": {
            "type": "string",
            "description": "工种/岗位"
          },
          "modifier": {
            "type": "string",
            "description": "修改人"
          },
          "name": {
            "type": "string",
            "description": "姓名"
          },
          "nationality": {
            "type": "string",
            "description": "国籍"
          },
          "occupation": {
            "type": "string",
            "description": "职业"
          },
          "operationType": {
            "type": "string",
            "description": "单个人员操作类型： add-增加人员；delete-减少人员；update-更新人员"
          },
          "policyNumber": {
            "type": "string",
            "description": "方案号"
          },
          "sex": {
            "type": "string",
            "description": "性别"
          },
          "studentNum": {
            "type": "integer",
            "description": "学号",
            "format": "int32"
          },
          "workType": {
            "type": "string",
            "description": "职务/工作类型"
          }
        },
        "description": "(校责险、雇主险、团意险)人员清单模型"
      },
      "CheckBindPhoneVO": {
        "title": "CheckBindPhoneVO",
        "required": [
          "phone"
        ],
        "type": "object",
        "properties": {
          "phone": {
            "type": "string"
          }
        }
      },
      "CheckPasswordVO": {
        "title": "CheckPasswordVO",
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "CommonFileDownloadLogVO": {
        "title": "CommonFileDownloadLogVO",
        "type": "object",
        "properties": {
          "applicationTime": {
            "type": "string",
            "description": "申请时间",
            "format": "date-time"
          },
          "condition": {
            "type": "string",
            "description": "导出条件"
          },
          "fileName": {
            "type": "string",
            "description": "文件名称"
          },
          "fileSize": {
            "type": "integer",
            "description": "文件大小",
            "format": "int64"
          },
          "fileSource": {
            "type": "string",
            "description": "文件来源"
          },
          "fileType": {
            "type": "string",
            "description": "文件类型"
          },
          "fileUri": {
            "type": "string",
            "description": "文件地址"
          },
          "fileUriKey": {
            "type": "string",
            "description": "文件地址key（oss）"
          },
          "id": {
            "type": "integer",
            "description": "主键",
            "format": "int64"
          },
          "module": {
            "type": "string",
            "description": "模块"
          },
          "operator": {
            "type": "string",
            "description": "操作人"
          },
          "status": {
            "type": "integer",
            "description": "状态（生成完成/生成中/生成失败）",
            "format": "int32"
          },
          "tenantId": {
            "type": "integer",
            "description": "租户id",
            "format": "int64"
          }
        },
        "description": "通用文件下载对象VO"
      },
      "CompanyDTO": {
        "title": "CompanyDTO",
        "type": "object",
        "properties": {
          "accountOpeningPermitUrl": {
            "type": "string"
          },
          "acctId": {
            "type": "string"
          },
          "adress": {
            "type": "string"
          },
          "authStatus": {
            "type": "string"
          },
          "businessLicenseUrl": {
            "type": "string"
          },
          "businessRegistrationCode": {
            "type": "string"
          },
          "certType": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "companyDesc": {
            "type": "string"
          },
          "companyLogoUrl": {
            "type": "string"
          },
          "companyStatus": {
            "type": "string"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "creditCode": {
            "type": "string"
          },
          "dataStatus": {
            "type": "string",
            "enum": [
              "CANCEL",
              "DELETE",
              "LOCK",
              "NORMAL",
              "UNKNOWN"
            ]
          },
          "expireDate": {
            "type": "string",
            "format": "date"
          },
          "extraInfo": {
            "type": "string"
          },
          "firstRewardRate": {
            "type": "number",
            "format": "bigdecimal"
          },
          "firstRewardType": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "licenceType": {
            "type": "string"
          },
          "linkEmail": {
            "type": "string"
          },
          "linkName": {
            "type": "string"
          },
          "linkPhone": {
            "type": "string"
          },
          "linkUserId": {
            "type": "integer",
            "format": "int64"
          },
          "linkcert": {
            "type": "string"
          },
          "mechanismCode": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "organizationCode": {
            "type": "string"
          },
          "remarks": {
            "type": "string"
          },
          "saleRegions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sealId": {
            "type": "string"
          },
          "sealUrl": {
            "type": "string"
          },
          "secondRewardRate": {
            "type": "number",
            "format": "bigdecimal"
          },
          "secondRewardType": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "strategyUrl": {
            "type": "string"
          },
          "template": {
            "type": "string"
          },
          "tenantId": {
            "type": "integer",
            "format": "int64"
          },
          "trafficPermitUrl": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "updateDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DataPermissionRequestDTO": {
        "title": "DataPermissionRequestDTO",
        "type": "object",
        "properties": {
          "agencyXxId": {
            "type": "integer",
            "format": "int64"
          },
          "agencyYyIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "businessChannelXxId": {
            "type": "integer",
            "format": "int64"
          },
          "businessChannelXxIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "salesChannelXxId": {
            "type": "integer",
            "format": "int64"
          },
          "salesChannelYyIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "someId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DictListReqVO": {
        "title": "DictListReqVO",
        "type": "object",
        "properties": {
          "dictCodeList": {
            "type": "array",
            "description": "字典code-列表",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "字典明细"
      },
      "DictRespVO": {
        "title": "DictRespVO",
        "type": "object",
        "properties": {
          "dictCode": {
            "type": "string",
            "description": "字典代码"
          },
          "dictItemList": {
            "type": "array",
            "description": "字典明细",
            "items": {
              "$ref": "#/components/schemas/AppDictItemRespVO"
            }
          }
        },
        "description": "字典响应信息"
      },
      "DownloadErrorMsgRequestVO": {
        "title": "DownloadErrorMsgRequestVO",
        "type": "object",
        "properties": {
          "blId": {
            "type": "integer",
            "description": "blId",
            "format": "int64"
          },
          "importType": {
            "type": "string",
            "description": "导入类型"
          },
          "logId": {
            "type": "integer",
            "description": "导入日志id",
            "format": "int64"
          },
          "taskId": {
            "type": "integer",
            "description": "薪资调整任务id",
            "format": "int64"
          }
        }
      },
      "ElecInvoiceVO": {
        "title": "ElecInvoiceVO",
        "type": "object",
        "properties": {
          "invoiceAmount": {
            "type": "string",
            "description": "开票金额（元）"
          },
          "invoiceDate": {
            "type": "string",
            "description": "开票日期：日期格式：yyyy-MM-dd"
          },
          "invoiceNo": {
            "type": "string",
            "description": "发票号码"
          },
          "invoiceUrl": {
            "type": "string",
            "description": "电子发票地址"
          }
        },
        "description": "电子发票模型"
      },
      "EmployerMainLiabilityVO": {
        "title": "EmployerMainLiabilityVO",
        "type": "object",
        "properties": {
          "aggregateLimit": {
            "type": "string",
            "description": "累计责任限额（元）"
          },
          "coveredItems": {
            "type": "string",
            "description": "承保项目"
          },
          "dductRate": {
            "type": "string",
            "description": "赔付比例（%）"
          },
          "deductible": {
            "type": "string",
            "description": "免赔额（元）"
          },
          "employeeNum": {
            "type": "integer",
            "description": "雇员人数",
            "format": "int32"
          },
          "employeeType": {
            "type": "string",
            "description": "雇员工种"
          },
          "indemnityLimit": {
            "type": "string",
            "description": "每人赔偿限额（元）"
          },
          "policyNumber": {
            "type": "string",
            "description": "方案号"
          }
        },
        "description": "雇主责任险主要责任信息模型"
      },
      "EndorseApplyReqVO": {
        "title": "EndorseApplyReqVO",
        "type": "object",
        "properties": {
          "endorseType": {
            "type": "string",
            "description": "批改类型 add-增加人员清单；delete-减少人员清单；update-更新人员清单"
          },
          "policyNo": {
            "type": "string",
            "description": "保单号"
          },
          "productCode": {
            "type": "string",
            "description": "产品code"
          }
        },
        "description": "批改申请入参模型"
      },
      "EndorseApplyResVO": {
        "title": "EndorseApplyResVO",
        "type": "object",
        "properties": {
          "applicationNo": {
            "type": "string",
            "description": "批改申请号"
          },
          "policyDetails": {
            "description": "保单详情信息",
            "$ref": "#/components/schemas/PolicyDetailsVO"
          }
        },
        "description": "批改申请出参模型"
      },
      "EndorseCallbackVO": {
        "title": "EndorseCallbackVO",
        "type": "object",
        "properties": {
          "applicationNo": {
            "type": "string",
            "description": "批改申请号"
          },
          "endorseStatus": {
            "type": "string",
            "description": "批改状态：暂存（自有系统）-temSave；提交待审核（自有系统）-waitAudit;生效中-effective"
          },
          "endorsementNo": {
            "type": "string",
            "description": "批单号"
          },
          "payUrl": {
            "type": "string",
            "description": "支付链接"
          }
        },
        "description": "批改状态回调入参模型"
      },
      "EndorseDownloadResVO": {
        "title": "EndorseDownloadResVO",
        "type": "object",
        "properties": {
          "applyUrl": {
            "type": "string",
            "description": "批改申请书url"
          }
        },
        "description": "批改申请书下载返回模型"
      },
      "EndorseRecordReqVO": {
        "title": "EndorseRecordReqVO",
        "type": "object",
        "properties": {
          "pageNum": {
            "type": "integer",
            "description": "页数",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "条数",
            "format": "int32"
          },
          "policyNo": {
            "type": "string",
            "description": "保单号"
          }
        },
        "description": "批改记录入参模型"
      },
      "EndorseRecordResVO": {
        "title": "EndorseRecordResVO",
        "type": "object",
        "properties": {
          "applicationNo": {
            "type": "string",
            "description": "批改申请号"
          },
          "effectiveDate": {
            "type": "string",
            "description": "批改生效日期，日期格式：yyyy-MM-dd"
          },
          "endorseStatus": {
            "type": "string",
            "description": "批改状态：暂存（自有系统）-temSave；提交待审核（自有系统）-waitAudit;生效中-effective"
          },
          "endorseType": {
            "type": "string",
            "description": "批改类型 add-增加人员清单；delete-减少人员清单；update-更新人员清单"
          },
          "endorsementNo": {
            "type": "string",
            "description": "批单号"
          },
          "policyNo": {
            "type": "string",
            "description": "保单号"
          },
          "premium": {
            "type": "string",
            "description": "保费，单位：元"
          },
          "productCode": {
            "type": "string",
            "description": "产品code"
          },
          "remark": {
            "type": "string",
            "description": "核保备注"
          }
        },
        "description": "批改记录出参模型"
      },
      "EndorseSubmitReqVO": {
        "title": "EndorseSubmitReqVO",
        "type": "object",
        "properties": {
          "applicationNo": {
            "type": "string",
            "description": "批改申请号"
          },
          "applyUrl": {
            "type": "string",
            "description": "批改申请书url"
          },
          "employerPersonList": {
            "type": "array",
            "description": "雇主责任险人员清单",
            "items": {
              "$ref": "#/components/schemas/PolicyPersonPageResVO"
            }
          },
          "endorseType": {
            "type": "string",
            "description": "批改类型 add-增加人员清单；reduce-减少人员清单；update-更新人员清单"
          },
          "groupPersonList": {
            "type": "array",
            "description": "团意险人员清单",
            "items": {
              "$ref": "#/components/schemas/PolicyPersonPageResVO"
            }
          },
          "policyNo": {
            "type": "string",
            "description": "保单号"
          },
          "productCode": {
            "type": "string",
            "description": "产品code"
          },
          "schoolPersonList": {
            "type": "array",
            "description": "校责险人员清单",
            "items": {
              "$ref": "#/components/schemas/PolicyPersonPageResVO"
            }
          },
          "trialPremium": {
            "type": "number",
            "description": "试算保费",
            "format": "bigdecimal"
          }
        },
        "description": "批改提核入参模型"
      },
      "EndorseSubmitResVO": {
        "title": "EndorseSubmitResVO",
        "type": "object",
        "properties": {
          "applicationNo": {
            "type": "string",
            "description": "批改申请号"
          },
          "payUrl": {
            "type": "string",
            "description": "支付链接"
          },
          "premium": {
            "type": "string",
            "description": "批改保费"
          },
          "status": {
            "type": "string",
            "description": "自核状态"
          }
        },
        "description": "批改提核出参模型"
      },
      "EndorseTemplateReqVO": {
        "title": "EndorseTemplateReqVO",
        "type": "object",
        "properties": {
          "endorseType": {
            "type": "string",
            "description": "批改类型 add-增加人员清单；delete-减少人员清单；update-更新人员清单"
          },
          "productType": {
            "type": "string",
            "description": "产品类型：school-校责险；employer-雇主责任险；group-团意险"
          }
        },
        "description": "批改人员清单模板导入入参模型"
      },
      "FrontDomainNameResVO": {
        "title": "FrontDomainNameResVO",
        "type": "object",
        "properties": {
          "coreApp": {
            "type": "string"
          },
          "goodsApp": {
            "type": "string",
            "description": "ToB"
          },
          "tobCoreApp": {
            "type": "string",
            "description": "ToB核型"
          },
          "zktApp": {
            "type": "string",
            "description": "众惠树"
          }
        }
      },
      "GrantedAuthority": {
        "title": "GrantedAuthority",
        "type": "object",
        "properties": {
          "authority": {
            "type": "string"
          }
        }
      },
      "GroupLiabilityVO": {
        "title": "GroupLiabilityVO",
        "type": "object",
        "properties": {
          "insuranceAmount": {
            "type": "string",
            "description": "保险金额（元）"
          },
          "liabilityName": {
            "type": "string",
            "description": "保障责任"
          },
          "policyNumber": {
            "type": "string",
            "description": "方案号"
          },
          "riskName": {
            "type": "string",
            "description": "险种名称"
          }
        },
        "description": "团意险责任信息模型"
      },
      "ImportHistoryVO": {
        "title": "ImportHistoryVO",
        "type": "object",
        "properties": {
          "errorInfo": {
            "type": "string",
            "description": "错误日志"
          },
          "errorLogFileName": {
            "type": "string",
            "description": "错误日志文件名称"
          },
          "failureCount": {
            "type": "integer",
            "description": "失败条数",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "description": "文件名称"
          },
          "filePath": {
            "type": "string",
            "description": "文件下载地址"
          },
          "hasErrorMsg": {
            "type": "boolean",
            "description": "是否含有错误信息",
            "example": false
          },
          "id": {
            "type": "integer",
            "description": "导入记录id",
            "format": "int64"
          },
          "importTime": {
            "type": "string",
            "description": "导入时间",
            "format": "date-time"
          },
          "importType": {
            "type": "string",
            "description": "导入类型"
          },
          "importUser": {
            "type": "string",
            "description": "导入人员"
          },
          "module": {
            "type": "string",
            "description": "模块类型"
          },
          "moduleType": {
            "type": "string",
            "description": "导入模块"
          },
          "status": {
            "type": "string",
            "description": "导入状态"
          },
          "successCount": {
            "type": "integer",
            "description": "成功条数",
            "format": "int32"
          },
          "tenantId": {
            "type": "integer",
            "description": "租户ID",
            "format": "int64"
          },
          "totalCount": {
            "type": "integer",
            "description": "总条数",
            "format": "int32"
          },
          "uploadLogId": {
            "type": "integer",
            "description": "导入记录id",
            "format": "int64"
          }
        },
        "description": "导入历史记录"
      },
      "JwtUserVO": {
        "title": "JwtUserVO",
        "type": "object",
        "properties": {
          "accountNonExpired": {
            "type": "boolean"
          },
          "accountNonLocked": {
            "type": "boolean"
          },
          "agencyId": {
            "type": "integer",
            "format": "int64"
          },
          "agencyLevel": {
            "type": "string"
          },
          "authorities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantedAuthority"
            }
          },
          "channelType": {
            "type": "string"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "credentialsNonExpired": {
            "type": "boolean"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "enabled": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "parentChannelCode": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "salesChannelCode": {
            "type": "string"
          },
          "salesChannelId": {
            "type": "integer",
            "format": "int64"
          },
          "salesChannelLevel": {
            "type": "integer",
            "format": "int32"
          },
          "salesChannelName": {
            "type": "string"
          },
          "service": {
            "type": "string"
          },
          "showPrivacy": {
            "type": "integer",
            "format": "int32"
          },
          "tenantId": {
            "type": "integer",
            "format": "int64"
          },
          "tenantPermission": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "validEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "validPwdStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "validStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "zhName": {
            "type": "string"
          }
        }
      },
      "ListAllResourceReqVO": {
        "title": "ListAllResourceReqVO",
        "type": "object",
        "properties": {
          "hideInMenu": {
            "type": "boolean",
            "description": "菜单是否显示 true-查询隐藏菜单 false-查询非隐藏菜单 其他-查询全部",
            "example": false
          },
          "isHierarchy": {
            "type": "boolean",
            "description": "菜单是否层级展示",
            "example": false
          },
          "menuType": {
            "type": "integer",
            "description": "1.菜单 2.按钮 3.api，如果查全部，则不传",
            "format": "int32"
          }
        }
      },
      "ListUserResourceReqVO": {
        "title": "ListUserResourceReqVO",
        "type": "object",
        "properties": {
          "hideInMenu": {
            "type": "boolean",
            "description": "菜单是否显示 true-查询隐藏菜单 false-查询非隐藏菜单 其他-查询全部",
            "example": false
          },
          "isHierarchy": {
            "type": "boolean",
            "description": "菜单是否层级展示",
            "example": false
          },
          "menuType": {
            "type": "integer",
            "description": "1.菜单 2.按钮 3.api，如果查全部，则不传",
            "format": "int32"
          }
        }
      },
      "MenuVO": {
        "title": "MenuVO",
        "type": "object",
        "properties": {
          "children": {
            "type": "array",
            "description": "子菜单",
            "items": {
              "$ref": "#/components/schemas/MenuVO"
            }
          },
          "code": {
            "type": "string",
            "description": "菜单code"
          },
          "hideInMenu": {
            "type": "boolean",
            "description": "菜单是否显示",
            "example": false
          },
          "icon": {
            "type": "string",
            "description": "菜单图标"
          },
          "id": {
            "type": "integer",
            "description": "菜单id",
            "format": "int64"
          },
          "indeterminate": {
            "type": "boolean",
            "description": "是否半选",
            "example": false
          },
          "level": {
            "type": "string",
            "description": "菜单等级"
          },
          "name": {
            "type": "string",
            "description": "菜单名称"
          },
          "parentId": {
            "type": "integer",
            "description": "父菜单id",
            "format": "int64"
          },
          "redirectType": {
            "type": "integer",
            "description": "跳转类型。0：基线经代核心。1：鲸小保经代核心；2：商品中心；3：众慧树；4：公式",
            "format": "int32"
          },
          "sort": {
            "type": "integer",
            "description": "菜单顺序",
            "format": "int32"
          },
          "type": {
            "type": "integer",
            "description": "类型 1：菜单 2：按钮",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "description": "菜单URL"
          }
        }
      },
      "OssFileDTO": {
        "title": "OssFileDTO",
        "type": "object",
        "properties": {
          "access": {
            "type": "string",
            "description": "访问权限",
            "enum": [
              "PRIVATE",
              "PUBLIC_READ"
            ]
          },
          "fileDesc": {
            "type": "string",
            "description": "文件描述"
          },
          "fileKey": {
            "type": "string",
            "description": "oss文件key"
          },
          "fileName": {
            "type": "string",
            "description": "文件名"
          },
          "fileType": {
            "type": "string",
            "description": "文件类型：'png', 'jpg', 'jpeg'  'rar', 'zip', 'doc', 'docx', 'pdf' "
          },
          "fileUploadTime": {
            "type": "string",
            "description": "文件上传时间 "
          }
        }
      },
      "PageDTO«CommonFileDownloadLogVO»": {
        "title": "PageDTO«CommonFileDownloadLogVO»",
        "type": "object",
        "properties": {
          "condition": {
            "$ref": "#/components/schemas/CommonFileDownloadLogVO"
          },
          "datas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonFileDownloadLogVO"
            }
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "pageNum": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "queryAll": {
            "type": "boolean"
          },
          "sortCondition": {
            "type": "string"
          },
          "sorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PageDTO«DataPermissionRequestDTO»Req": {
        "title": "PageDTO«DataPermissionRequestDTO»Req",
        "type": "object",
        "properties": {
          "condition": {
            "$ref": "#/components/schemas/DataPermissionRequestDTO"
          },
          "datas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPermissionRequestDTO"
            }
          },
          "pageNum": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "queryAll": {
            "type": "boolean"
          },
          "sorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PageDTO«DataPermissionRequestDTO»Res": {
        "title": "PageDTO«DataPermissionRequestDTO»Res",
        "type": "object",
        "properties": {
          "condition": {
            "$ref": "#/components/schemas/DataPermissionRequestDTO"
          },
          "datas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPermissionRequestDTO"
            }
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "pageNum": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "queryAll": {
            "type": "boolean"
          },
          "sortCondition": {
            "type": "string"
          },
          "sorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PageDTO«EndorseRecordResVO»": {
        "title": "PageDTO«EndorseRecordResVO»",
        "type": "object",
        "properties": {
          "condition": {
            "$ref": "#/components/schemas/EndorseRecordResVO"
          },
          "datas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EndorseRecordResVO"
            }
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "pageNum": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "queryAll": {
            "type": "boolean"
          },
          "sortCondition": {
            "type": "string"
          },
          "sorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PageDTO«ImportHistoryVO»": {
        "title": "PageDTO«ImportHistoryVO»",
        "type": "object",
        "properties": {
          "condition": {
            "$ref": "#/components/schemas/ImportHistoryVO"
          },
          "datas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImportHistoryVO"
            }
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "pageNum": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "queryAll": {
            "type": "boolean"
          },
          "sortCondition": {
            "type": "string"
          },
          "sorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PageDTO«PolicyPersonPageResVO»": {
        "title": "PageDTO«PolicyPersonPageResVO»",
        "type": "object",
        "properties": {
          "condition": {
            "$ref": "#/components/schemas/PolicyPersonPageResVO"
          },
          "datas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyPersonPageResVO"
            }
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "pageNum": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "queryAll": {
            "type": "boolean"
          },
          "sortCondition": {
            "type": "string"
          },
          "sorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PageDTO«PolicyResVO»": {
        "title": "PageDTO«PolicyResVO»",
        "type": "object",
        "properties": {
          "condition": {
            "$ref": "#/components/schemas/PolicyResVO"
          },
          "datas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyResVO"
            }
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "pageNum": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "queryAll": {
            "type": "boolean"
          },
          "sortCondition": {
            "type": "string"
          },
          "sorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PageDTO«TechBaslCompanyVO»": {
        "title": "PageDTO«TechBaslCompanyVO»",
        "type": "object",
        "properties": {
          "condition": {
            "$ref": "#/components/schemas/TechBaslCompanyVORes"
          },
          "datas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TechBaslCompanyVORes"
            }
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "pageNum": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "queryAll": {
            "type": "boolean"
          },
          "sortCondition": {
            "type": "string"
          },
          "sorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PageFileDownloadRequestDTO": {
        "title": "PageFileDownloadRequestDTO",
        "type": "object",
        "properties": {
          "fileSourceList": {
            "type": "array",
            "description": "文件导出类型列表",
            "items": {
              "type": "string"
            }
          },
          "pageNum": {
            "type": "integer",
            "description": "页码",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "每页条数",
            "format": "int32"
          },
          "settlementId": {
            "type": "integer",
            "description": "结算单ID",
            "format": "int64"
          },
          "status": {
            "type": "integer",
            "description": "状态（生成完成/生成中/生成失败）",
            "format": "int32"
          }
        },
        "description": "文件下载分页查询"
      },
      "PageImportHistoryRequestVO": {
        "title": "PageImportHistoryRequestVO",
        "type": "object",
        "properties": {
          "bizNo": {
            "type": "string",
            "description": "导入文件业务号"
          },
          "importTypeList": {
            "type": "array",
            "description": "文件导入类型",
            "items": {
              "type": "string"
            }
          },
          "pageNum": {
            "type": "integer",
            "description": "页码",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "每页条数",
            "format": "int32"
          }
        },
        "description": "文件导入历史请求参数查询"
      },
      "PageInfo«AccountUserVO»": {
        "title": "PageInfo«AccountUserVO»",
        "type": "object",
        "properties": {
          "endRow": {
            "type": "integer",
            "format": "int64"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "isFirstPage": {
            "type": "boolean"
          },
          "isLastPage": {
            "type": "boolean"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountUserVO"
            }
          },
          "navigateFirstPage": {
            "type": "integer",
            "format": "int32"
          },
          "navigateLastPage": {
            "type": "integer",
            "format": "int32"
          },
          "navigatePages": {
            "type": "integer",
            "format": "int32"
          },
          "navigatepageNums": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "nextPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNum": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pages": {
            "type": "integer",
            "format": "int32"
          },
          "prePage": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "startRow": {
            "type": "integer",
            "format": "int64"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PageInfo«UserLogVO»": {
        "title": "PageInfo«UserLogVO»",
        "type": "object",
        "properties": {
          "endRow": {
            "type": "integer",
            "format": "int64"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "isFirstPage": {
            "type": "boolean"
          },
          "isLastPage": {
            "type": "boolean"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserLogVO"
            }
          },
          "navigateFirstPage": {
            "type": "integer",
            "format": "int32"
          },
          "navigateLastPage": {
            "type": "integer",
            "format": "int32"
          },
          "navigatePages": {
            "type": "integer",
            "format": "int32"
          },
          "navigatepageNums": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "nextPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNum": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pages": {
            "type": "integer",
            "format": "int32"
          },
          "prePage": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "startRow": {
            "type": "integer",
            "format": "int64"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PageInfo«object»": {
        "title": "PageInfo«object»",
        "type": "object",
        "properties": {
          "endRow": {
            "type": "integer",
            "format": "int64"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "isFirstPage": {
            "type": "boolean"
          },
          "isLastPage": {
            "type": "boolean"
          },
          "list": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "navigateFirstPage": {
            "type": "integer",
            "format": "int32"
          },
          "navigateLastPage": {
            "type": "integer",
            "format": "int32"
          },
          "navigatePages": {
            "type": "integer",
            "format": "int32"
          },
          "navigatepageNums": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "nextPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNum": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pages": {
            "type": "integer",
            "format": "int32"
          },
          "prePage": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "startRow": {
            "type": "integer",
            "format": "int64"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PasswordVO": {
        "title": "PasswordVO",
        "required": [
          "newPassword",
          "oldPassword"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "newPassword": {
            "type": "string"
          },
          "oldPassword": {
            "type": "string"
          }
        }
      },
      "PolicyBasicInfoVO": {
        "title": "PolicyBasicInfoVO",
        "type": "object",
        "properties": {
          "guaranteePeriodDateBegin": {
            "type": "string",
            "description": "保障期起止日期，格式：yyyy-MM-dd HH:mm:ss"
          },
          "guaranteePeriodDateEnd": {
            "type": "string",
            "description": "保障期截止日期，格式：yyyy-MM-dd HH:mm:ss"
          },
          "insuredCount": {
            "type": "integer",
            "description": "参保人数",
            "format": "int32"
          },
          "policyNo": {
            "type": "string",
            "description": "保单号"
          },
          "policyStatus": {
            "type": "string",
            "description": "保单状态"
          },
          "premium": {
            "type": "string",
            "description": "保费，单位：元"
          },
          "productCode": {
            "type": "string",
            "description": "产品code"
          },
          "productName": {
            "type": "string",
            "description": "保险产品名称"
          },
          "signDate": {
            "type": "string",
            "description": "签单日期，格式：yyyy-MM-dd"
          }
        },
        "description": "保单详情模型"
      },
      "PolicyDetailsVO": {
        "title": "PolicyDetailsVO",
        "type": "object",
        "properties": {
          "employerAdditionalLiabilityList": {
            "type": "array",
            "description": "雇主责任险附加险责任列表",
            "items": {
              "$ref": "#/components/schemas/AdditionalLiabilityVO"
            }
          },
          "employerMainLiabilityList": {
            "type": "array",
            "description": "雇主责任险主要责任列表",
            "items": {
              "$ref": "#/components/schemas/EmployerMainLiabilityVO"
            }
          },
          "groupLiabilityList": {
            "type": "array",
            "description": "团意险责任列表",
            "items": {
              "$ref": "#/components/schemas/GroupLiabilityVO"
            }
          },
          "policyBasicInfo": {
            "description": "保单基本信息",
            "$ref": "#/components/schemas/PolicyBasicInfoVO"
          },
          "productType": {
            "type": "string",
            "description": "产品类型：school-校责险；employer-雇主责任险；group-团意险"
          },
          "schoolLiabilityList": {
            "type": "array",
            "description": "校责险责任列表",
            "items": {
              "$ref": "#/components/schemas/SchoolLiabilityVO"
            }
          },
          "totalPremium": {
            "type": "string",
            "description": "保费合计，单位：元"
          }
        },
        "description": "保单详情模型"
      },
      "PolicyPageReqVO": {
        "title": "PolicyPageReqVO",
        "type": "object",
        "properties": {
          "pageNum": {
            "type": "integer",
            "description": "页数",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "条数",
            "format": "int32"
          },
          "policyNo": {
            "type": "string",
            "description": "保单号"
          },
          "policyStatus": {
            "type": "string",
            "description": "保单状态：生效-effective"
          },
          "socialCreditCode": {
            "type": "string",
            "description": "社会信用代码"
          }
        },
        "description": "保单列表分页查询模型"
      },
      "PolicyPersonPageReqVO": {
        "title": "PolicyPersonPageReqVO",
        "type": "object",
        "properties": {
          "applicationNo": {
            "type": "string",
            "description": "批改申请号"
          },
          "certNo": {
            "type": "string",
            "description": "证件号码"
          },
          "certType": {
            "type": "string",
            "description": "证件类型，注：若是校责险，证件类型传身份证"
          },
          "insuredName": {
            "type": "string",
            "description": "姓名"
          },
          "pageNum": {
            "type": "integer",
            "description": "页数",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "条数",
            "format": "int32"
          },
          "policyNo": {
            "type": "string",
            "description": "保单号"
          },
          "productCode": {
            "type": "string",
            "description": "产品code"
          }
        },
        "description": "保单详情-人员清单列表分页查询请求模型"
      },
      "PolicyPersonPageResVO": {
        "title": "PolicyPersonPageResVO",
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "住所/单位地址"
          },
          "admissionDate": {
            "type": "string",
            "description": "入学日期,格式：yyyy-MM-dd"
          },
          "age": {
            "type": "integer",
            "description": "年龄",
            "format": "int32"
          },
          "barkup": {
            "type": "string",
            "description": "备注"
          },
          "birthday": {
            "type": "string",
            "description": "出生年月,格式：yyyy-MM-dd"
          },
          "certNo": {
            "type": "string",
            "description": "身份证号码"
          },
          "certType": {
            "type": "string",
            "description": "证件类型"
          },
          "certValidityPeriodEnd": {
            "type": "string",
            "description": "证件有效期止,格式：yyyy-MM-dd"
          },
          "className": {
            "type": "string",
            "description": "班级（专业）"
          },
          "contact": {
            "type": "string",
            "description": "联系方式"
          },
          "employeeType": {
            "type": "string",
            "description": "雇员工种"
          },
          "endorseApplyId": {
            "type": "integer",
            "description": "批改申请id",
            "format": "int64"
          },
          "gradeName": {
            "type": "string",
            "description": "年级"
          },
          "hasNewCitizen": {
            "type": "boolean",
            "description": "是否是新市民",
            "example": false
          },
          "health": {
            "type": "string",
            "description": "身体状况"
          },
          "holderRelation": {
            "type": "string",
            "description": "与投保人关系"
          },
          "id": {
            "type": "integer",
            "description": "主键id",
            "format": "int64"
          },
          "jobPosition": {
            "type": "string",
            "description": "工种/岗位"
          },
          "name": {
            "type": "string",
            "description": "姓名"
          },
          "nationality": {
            "type": "string",
            "description": "国籍"
          },
          "occupation": {
            "type": "string",
            "description": "职业"
          },
          "policyNumber": {
            "type": "string",
            "description": "方案号"
          },
          "sex": {
            "type": "string",
            "description": "性别"
          },
          "studentNum": {
            "type": "integer",
            "description": "学号",
            "format": "int32"
          },
          "workType": {
            "type": "string",
            "description": "职务/工作类型"
          }
        },
        "description": "保单详情-人员清单列表分页查询响应模型"
      },
      "PolicyReqVO": {
        "title": "PolicyReqVO",
        "type": "object",
        "properties": {
          "policyNo": {
            "type": "string",
            "description": "保单号"
          },
          "productCode": {
            "type": "string",
            "description": "产品code"
          }
        },
        "description": "保单查询入参模型"
      },
      "PolicyResVO": {
        "title": "PolicyResVO",
        "type": "object",
        "properties": {
          "fileUrl": {
            "type": "string",
            "description": "文件下载地址"
          },
          "guaranteePeriodDateBegin": {
            "type": "string",
            "description": "保障期起止日期，格式：yyyy-MM-dd HH:mm:ss"
          },
          "guaranteePeriodDateEnd": {
            "type": "string",
            "description": "保障期截止日期，格式：yyyy-MM-dd HH:mm:ss"
          },
          "holderName": {
            "type": "string",
            "description": "投保人姓名"
          },
          "insuredCount": {
            "type": "integer",
            "description": "参保人数",
            "format": "int32"
          },
          "policyNo": {
            "type": "string",
            "description": "保单号"
          },
          "policyStatus": {
            "type": "string",
            "description": "保单状态"
          },
          "premium": {
            "type": "string",
            "description": "保费，单位：元"
          },
          "productCode": {
            "type": "string",
            "description": "产品code"
          },
          "productName": {
            "type": "string",
            "description": "保险产品名称"
          },
          "schoolType": {
            "type": "string",
            "description": "学校类型"
          },
          "signDate": {
            "type": "string",
            "description": "签单日期，格式：yyyy-MM-dd"
          }
        },
        "description": "保单查询出参模型"
      },
      "ResetPasswordVO": {
        "title": "ResetPasswordVO",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "用户id",
            "format": "int64"
          },
          "tenantId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResourceInfoDTO": {
        "title": "ResourceInfoDTO",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "资源code"
          },
          "hideInMenu": {
            "type": "boolean",
            "description": "菜单是否隐藏",
            "example": false
          },
          "icon": {
            "type": "string",
            "description": "菜单图标"
          },
          "id": {
            "type": "integer",
            "description": "资源id",
            "format": "int64"
          },
          "level": {
            "type": "integer",
            "description": "层级",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "资源名称"
          },
          "path": {
            "type": "string",
            "description": "资源路径"
          },
          "pid": {
            "type": "integer",
            "description": "资源父id",
            "format": "int64"
          },
          "redirectType": {
            "type": "integer",
            "description": "跳转类型。0：基线经代核心。1：鲸小保经代核心；2：商品中心；3：众慧树；4：公式",
            "format": "int32"
          },
          "resourceOrder": {
            "type": "integer",
            "description": "顺序",
            "format": "int32"
          },
          "roleId": {
            "type": "integer",
            "description": "角色ID",
            "format": "int64"
          },
          "service": {
            "type": "string",
            "description": "所属系统"
          },
          "status": {
            "type": "integer",
            "description": "状态 0.停用 1.启用",
            "format": "int32"
          },
          "type": {
            "type": "integer",
            "description": "资源类型 1.菜单 2.按钮 3.API",
            "format": "int32"
          }
        }
      },
      "ResourceStatisticsVO": {
        "title": "ResourceStatisticsVO",
        "required": [
          "code",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "资源id"
          },
          "name": {
            "type": "string",
            "description": "资源名称"
          },
          "type": {
            "type": "integer",
            "description": "资源类型 1.菜单 2.按钮",
            "format": "int32"
          }
        }
      },
      "Result": {
        "title": "Result",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "type": "object"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "ResultDTO": {
        "title": "ResultDTO",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "type": "object"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "FAIL",
              "SUCCESS"
            ]
          }
        }
      },
      "Result«AccountUserVO»": {
        "title": "Result«AccountUserVO»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/AccountUserVO"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«DataPermissionRequestDTO»": {
        "title": "Result«DataPermissionRequestDTO»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DataPermissionRequestDTO"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«EndorseApplyResVO»": {
        "title": "Result«EndorseApplyResVO»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/EndorseApplyResVO"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«EndorseDownloadResVO»": {
        "title": "Result«EndorseDownloadResVO»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/EndorseDownloadResVO"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«EndorseSubmitResVO»": {
        "title": "Result«EndorseSubmitResVO»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/EndorseSubmitResVO"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«FrontDomainNameResVO»": {
        "title": "Result«FrontDomainNameResVO»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/FrontDomainNameResVO"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«JwtUserVO»": {
        "title": "Result«JwtUserVO»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/JwtUserVO"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«List«DictRespVO»»": {
        "title": "Result«List«DictRespVO»»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DictRespVO"
            }
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«List«ElecInvoiceVO»»": {
        "title": "Result«List«ElecInvoiceVO»»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ElecInvoiceVO"
            }
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«List«MenuVO»»": {
        "title": "Result«List«MenuVO»»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MenuVO"
            }
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«OssFileDTO»": {
        "title": "Result«OssFileDTO»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/OssFileDTO"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«PageDTO«CommonFileDownloadLogVO»»": {
        "title": "Result«PageDTO«CommonFileDownloadLogVO»»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageDTO«CommonFileDownloadLogVO»"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«PageDTO«DataPermissionRequestDTO»»": {
        "title": "Result«PageDTO«DataPermissionRequestDTO»»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageDTO«DataPermissionRequestDTO»Res"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«PageDTO«EndorseRecordResVO»»": {
        "title": "Result«PageDTO«EndorseRecordResVO»»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageDTO«EndorseRecordResVO»"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«PageDTO«ImportHistoryVO»»": {
        "title": "Result«PageDTO«ImportHistoryVO»»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageDTO«ImportHistoryVO»"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«PageDTO«PolicyPersonPageResVO»»": {
        "title": "Result«PageDTO«PolicyPersonPageResVO»»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageDTO«PolicyPersonPageResVO»"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«PageDTO«PolicyResVO»»": {
        "title": "Result«PageDTO«PolicyResVO»»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageDTO«PolicyResVO»"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«PageDTO«TechBaslCompanyVO»»": {
        "title": "Result«PageDTO«TechBaslCompanyVO»»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageDTO«TechBaslCompanyVO»"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«PageInfo«AccountUserVO»»": {
        "title": "Result«PageInfo«AccountUserVO»»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageInfo«AccountUserVO»"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«PageInfo«UserLogVO»»": {
        "title": "Result«PageInfo«UserLogVO»»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageInfo«UserLogVO»"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«PageInfo«object»»": {
        "title": "Result«PageInfo«object»»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageInfo«object»"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«PolicyDetailsVO»": {
        "title": "Result«PolicyDetailsVO»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PolicyDetailsVO"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«PolicyResVO»": {
        "title": "Result«PolicyResVO»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PolicyResVO"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«RoleVO»": {
        "title": "Result«RoleVO»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/RoleVO"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«TechBaslCompanyVO»": {
        "title": "Result«TechBaslCompanyVO»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/TechBaslCompanyVORes"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«UploadFileRespVO»": {
        "title": "Result«UploadFileRespVO»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/UploadFileRespVO"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«UploadResultVO对象»": {
        "title": "Result«UploadResultVO对象»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/UploadResultVO对象"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«UserDTO»": {
        "title": "Result«UserDTO»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/UserDTO"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«UserVO»": {
        "title": "Result«UserVO»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/UserVO"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«Void»": {
        "title": "Result«Void»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«boolean»": {
        "title": "Result«boolean»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "type": "boolean"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«long»": {
        "title": "Result«long»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "type": "integer",
            "format": "int64"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«object»": {
        "title": "Result«object»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "type": "object"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "Result«string»": {
        "title": "Result«string»",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "data": {
            "type": "string"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERROR",
              "OK"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "RoleAddVO": {
        "title": "RoleAddVO",
        "required": [
          "menuIds",
          "name",
          "roleCode"
        ],
        "type": "object",
        "properties": {
          "menuIds": {
            "type": "array",
            "description": "菜单id",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "name": {
            "type": "string",
            "description": "角色名称"
          },
          "roleCode": {
            "type": "string",
            "description": "角色编码"
          },
          "tenantId": {
            "type": "integer",
            "description": "租户id",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "description": "登录人用户id",
            "format": "int64"
          }
        }
      },
      "RoleDeleteVO": {
        "title": "RoleDeleteVO",
        "required": [
          "roleId"
        ],
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "description": "角色id",
            "format": "int64"
          }
        }
      },
      "RoleInfoDTO": {
        "title": "RoleInfoDTO",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "角色代码"
          },
          "gmtCreated": {
            "type": "string",
            "description": "创建时间",
            "format": "date-time"
          },
          "gmtModified": {
            "type": "string",
            "description": "最后更新时间",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "description": "角色id",
            "format": "int64"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceInfoDTO"
            }
          },
          "modifier": {
            "type": "string",
            "description": "更新人"
          },
          "name": {
            "type": "string",
            "description": "角色名称"
          },
          "service": {
            "type": "string",
            "description": "所属系统"
          },
          "status": {
            "type": "integer",
            "description": "状态 0.停用 1.启用",
            "format": "int32"
          },
          "tenantId": {
            "type": "string",
            "description": "所属公司编码"
          },
          "type": {
            "type": "string",
            "description": "角色类型"
          }
        }
      },
      "RoleMenuVO": {
        "title": "RoleMenuVO",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "菜单id",
            "format": "int64"
          },
          "indeterminate": {
            "type": "boolean",
            "description": "是否半选",
            "example": false
          }
        }
      },
      "RoleQueryByIdVO": {
        "title": "RoleQueryByIdVO",
        "required": [
          "roleId"
        ],
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "description": "角色id",
            "format": "int64"
          }
        }
      },
      "RoleUpdateDTO": {
        "title": "RoleUpdateDTO",
        "required": [
          "id",
          "menuIds",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "角色id",
            "format": "int64"
          },
          "menuIds": {
            "type": "array",
            "description": "菜单id",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "name": {
            "type": "string",
            "description": "角色名称"
          }
        }
      },
      "RoleVO": {
        "title": "RoleVO",
        "type": "object",
        "properties": {
          "createDate": {
            "type": "string",
            "description": "创建时间"
          },
          "id": {
            "type": "integer",
            "description": "角色id",
            "format": "int64"
          },
          "menus": {
            "type": "array",
            "description": "资源菜单列表",
            "items": {
              "$ref": "#/components/schemas/RoleMenuVO"
            }
          },
          "modifier": {
            "type": "string",
            "description": "更新人"
          },
          "name": {
            "type": "string",
            "description": "角色名称"
          },
          "roleCode": {
            "type": "string",
            "description": "角色编码"
          },
          "tenantId": {
            "type": "integer",
            "format": "int64"
          },
          "updateDate": {
            "type": "string",
            "description": "更新时间"
          }
        }
      },
      "SaasUserAddVO": {
        "title": "SaasUserAddVO",
        "required": [
          "phone",
          "roleIds",
          "userName"
        ],
        "type": "object",
        "properties": {
          "certiNo": {
            "type": "string",
            "description": "身份证号码"
          },
          "companyId": {
            "type": "integer",
            "description": "公司id",
            "format": "int64"
          },
          "password": {
            "type": "string",
            "description": "登录密码"
          },
          "phone": {
            "type": "string",
            "description": "手机号"
          },
          "roleIds": {
            "type": "array",
            "description": "角色id列表",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "service": {
            "type": "string",
            "description": "所属系统"
          },
          "showPrivacy": {
            "type": "integer",
            "description": "显示隐私数据（脱敏数据）0 不显示 1显示",
            "format": "int32"
          },
          "tenantId": {
            "type": "integer",
            "description": "租户id",
            "format": "int64"
          },
          "userName": {
            "type": "string",
            "description": "登录账号"
          },
          "validEndDate": {
            "type": "string",
            "description": "账号有效期止期",
            "format": "date-time"
          },
          "validStartDate": {
            "type": "string",
            "description": "账号有效期起期",
            "format": "date-time"
          },
          "zhName": {
            "type": "string",
            "description": "使用人"
          }
        }
      },
      "SaasUserDetailRequestVO": {
        "title": "SaasUserDetailRequestVO",
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "用户id"
          }
        }
      },
      "SaasUserEnableOrDisableVO": {
        "title": "SaasUserEnableOrDisableVO",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "用户id",
            "format": "int64"
          },
          "switchFlag": {
            "type": "integer",
            "description": "启用/停用标记：1-启用；0-停用",
            "format": "int32"
          }
        },
        "description": "后台用户账户启用/停用模型"
      },
      "SaasUserInvalidDTO": {
        "title": "SaasUserInvalidDTO",
        "required": [
          "authUserIds"
        ],
        "type": "object",
        "properties": {
          "authUserIds": {
            "type": "array",
            "description": "权限管理系统用户id列表",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "tenantId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SaasUserModifyVO": {
        "title": "SaasUserModifyVO",
        "type": "object",
        "properties": {
          "newPassword": {
            "type": "string",
            "description": "新密码"
          },
          "oldPassword": {
            "type": "string",
            "description": "当前密码"
          }
        },
        "description": "后台用户信息修改密码模型"
      },
      "SaasUserUpdateVO": {
        "title": "SaasUserUpdateVO",
        "required": [
          "id",
          "phone",
          "roleIds",
          "userName"
        ],
        "type": "object",
        "properties": {
          "certiNo": {
            "type": "string",
            "description": "身份证号码"
          },
          "companyId": {
            "type": "integer",
            "description": "公司id",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "description": "用户id",
            "format": "int64"
          },
          "password": {
            "type": "string",
            "description": "登录密码"
          },
          "phone": {
            "type": "string",
            "description": "手机号"
          },
          "roleIds": {
            "type": "array",
            "description": "角色id列表",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "service": {
            "type": "string",
            "description": "所属系统"
          },
          "showPrivacy": {
            "type": "integer",
            "description": "显示隐私数据（脱敏数据）0 不显示 1显示",
            "format": "int32"
          },
          "tenantId": {
            "type": "integer",
            "description": "租户id",
            "format": "int64"
          },
          "userName": {
            "type": "string",
            "description": "用户名"
          },
          "validEndDate": {
            "type": "string",
            "description": "账号有效期止期",
            "format": "date-time"
          },
          "validStartDate": {
            "type": "string",
            "description": "账号有效期起期",
            "format": "date-time"
          },
          "zhName": {
            "type": "string",
            "description": "中文名"
          }
        }
      },
      "SchoolLiabilityVO": {
        "title": "SchoolLiabilityVO",
        "type": "object",
        "properties": {
          "aggregateLimit": {
            "type": "string",
            "description": "累计赔偿限额（元）"
          },
          "perOccurrenceLimit": {
            "type": "string",
            "description": "每次事故赔偿限额（元）"
          },
          "perPersonPerOccurrenceLimit": {
            "type": "string",
            "description": "每次事故每人伤亡赔偿限额（元）"
          },
          "riskName": {
            "type": "string",
            "description": "险种名称"
          }
        },
        "description": "校责险责任信息模型"
      },
      "SendSmsCodeRequest": {
        "title": "SendSmsCodeRequest",
        "required": [
          "smsCodeType"
        ],
        "type": "object",
        "properties": {
          "mobile": {
            "type": "string",
            "description": "手机号 注册发送验证码时不能为空"
          },
          "service": {
            "type": "string",
            "description": "所属系统"
          },
          "smsCodeType": {
            "type": "string",
            "description": "短信验证码类型  1.登录 2.注册用户"
          },
          "userName": {
            "type": "string",
            "description": "用户名 登录发送验证码时不能为空"
          }
        }
      },
      "SmsEmailVO": {
        "title": "SmsEmailVO",
        "required": [
          "type",
          "userName"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "类型"
          },
          "userName": {
            "type": "string",
            "description": "用户名"
          }
        }
      },
      "SmsEmailValidateVO": {
        "title": "SmsEmailValidateVO",
        "required": [
          "smsCode",
          "type",
          "userName"
        ],
        "type": "object",
        "properties": {
          "smsCode": {
            "type": "string",
            "description": "短信验证码"
          },
          "type": {
            "type": "string",
            "description": "类型"
          },
          "userName": {
            "type": "string",
            "description": "用户名"
          }
        }
      },
      "Sort": {
        "title": "Sort",
        "type": "object",
        "properties": {
          "asc": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "TechBaslCompanyAddOrEditVO": {
        "title": "TechBaslCompanyAddOrEditVO",
        "type": "object",
        "properties": {
          "applyName": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "申请人姓名"
          },
          "authorizedLetterUrl": {
            "type": "string",
            "description": "盖章授权委托书url"
          },
          "email": {
            "type": "string",
            "description": "邮箱"
          },
          "enterpriseCertCode": {
            "type": "string",
            "description": "企业证件号码"
          },
          "enterpriseCertType": {
            "type": "integer",
            "description": "企业证件类型：1-统一社会信用代码；2-其他证件",
            "format": "int32"
          },
          "enterpriseLicenseUrl": {
            "type": "string",
            "description": "营业执照url"
          },
          "enterpriseName": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "企业名称"
          },
          "id": {
            "type": "integer",
            "description": "企业id",
            "format": "int64"
          },
          "idCardCopyUrl": {
            "type": "string",
            "description": "申请人身份证复印件url"
          },
          "legalRepresentative": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "法定代表人"
          },
          "mobile": {
            "type": "string",
            "description": "申请人手机号"
          },
          "registerDate": {
            "type": "string",
            "description": "注册日期",
            "format": "date-time"
          }
        },
        "description": "企业信息新增或编辑模型"
      },
      "TechBaslCompanyOperationVO": {
        "title": "TechBaslCompanyOperationVO",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "企业用户id",
            "format": "int64"
          },
          "newPassword": {
            "type": "string",
            "description": "新密码"
          },
          "oldPassword": {
            "type": "string",
            "description": "当前密码"
          },
          "reviewRemark": {
            "type": "string",
            "description": "审核备注"
          },
          "status": {
            "type": "integer",
            "description": "账号状态：1-待审核；2-审核拒绝；3-启用(审核通过)；4-停用",
            "format": "int32"
          }
        },
        "description": "对企业用户信息操作模型"
      },
      "TechBaslCompanyPageReqVO": {
        "title": "TechBaslCompanyPageReqVO",
        "type": "object",
        "properties": {
          "enterpriseCertCode": {
            "type": "string",
            "description": "企业证件号码"
          },
          "enterpriseCertType": {
            "type": "integer",
            "description": "企业证件类型：1-统一社会信用代码；2-其他证件",
            "format": "int32"
          },
          "enterpriseName": {
            "type": "string",
            "description": "企业名称"
          },
          "mobile": {
            "type": "string",
            "description": "申请人手机号"
          },
          "pageNum": {
            "type": "integer",
            "description": "页数",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "条数",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "账号状态：1-待审核；2-审核拒绝；3-启用；4-停用",
            "format": "int32"
          }
        },
        "description": "企业信息分页查询模型"
      },
      "TechBaslCompanyVOReq": {
        "title": "TechBaslCompanyVOReq",
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "邮箱"
          },
          "password": {
            "type": "string",
            "description": "登录密码"
          },
          "userName": {
            "type": "string",
            "description": "登录账号"
          }
        },
        "description": "企业信息模型"
      },
      "TechBaslCompanyVORes": {
        "title": "TechBaslCompanyVORes",
        "type": "object",
        "properties": {
          "applyName": {
            "type": "string",
            "description": "申请人姓名"
          },
          "authorizedLetterUrl": {
            "type": "string",
            "description": "盖章授权委托书url"
          },
          "email": {
            "type": "string",
            "description": "邮箱"
          },
          "enterpriseCertCode": {
            "type": "string",
            "description": "企业证件号码"
          },
          "enterpriseCertType": {
            "type": "integer",
            "description": "企业证件类型：1-统一社会信用代码；2-其他证件",
            "format": "int32"
          },
          "enterpriseLicenseUrl": {
            "type": "string",
            "description": "营业执照url"
          },
          "enterpriseName": {
            "type": "string",
            "description": "企业名称"
          },
          "id": {
            "type": "integer",
            "description": "企业id",
            "format": "int64"
          },
          "idCardCopyUrl": {
            "type": "string",
            "description": "申请人身份证复印件url"
          },
          "legalRepresentative": {
            "type": "string",
            "description": "法定代表人"
          },
          "mobile": {
            "type": "string",
            "description": "申请人手机号"
          },
          "pageNum": {
            "type": "integer",
            "description": "页数",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "条数",
            "format": "int32"
          },
          "password": {
            "type": "string",
            "description": "登录密码"
          },
          "registerDate": {
            "type": "string",
            "description": "注册日期",
            "format": "date-time"
          },
          "reviewRemark": {
            "type": "string",
            "description": "审核备注"
          },
          "service": {
            "type": "string",
            "description": "所属系统"
          },
          "status": {
            "type": "integer",
            "description": "账号状态：1-待审核；2-审核拒绝；3-启用；4-停用",
            "format": "int32"
          }
        },
        "description": "企业信息模型"
      },
      "UnbindPhoneVO": {
        "title": "UnbindPhoneVO",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "用户id",
            "format": "int64"
          }
        }
      },
      "UploadFileRespVO": {
        "title": "UploadFileRespVO",
        "type": "object",
        "properties": {
          "ossKey": {
            "type": "string",
            "description": "上传oss key"
          },
          "tempUrl": {
            "type": "string",
            "description": "临时链接"
          },
          "url": {
            "type": "string",
            "description": "永久链接"
          }
        }
      },
      "UploadResultVO对象": {
        "title": "UploadResultVO对象",
        "type": "object",
        "properties": {
          "docUri": {
            "type": "string",
            "description": "保司附件地址"
          },
          "docUriKey": {
            "type": "string",
            "description": "附件地址key"
          },
          "objectAccess": {
            "type": "integer",
            "description": "文件上传权限 1 私有  2 公共",
            "format": "int32"
          }
        },
        "description": "上传结果"
      },
      "UserBaseInfoVO": {
        "title": "UserBaseInfoVO",
        "type": "object",
        "properties": {
          "companyAddress": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "tenantId": {
            "type": "integer",
            "format": "int64"
          },
          "workPhone": {
            "type": "string"
          }
        }
      },
      "UserDTO": {
        "title": "UserDTO",
        "type": "object",
        "properties": {
          "agencyDataPermissionType": {
            "type": "string",
            "enum": [
              "SAME_TO_ITS_AGENCY",
              "SELF_DEFINED"
            ]
          },
          "agencyId": {
            "type": "integer",
            "format": "int64"
          },
          "agencyLevel": {
            "type": "string"
          },
          "agencyName": {
            "type": "string"
          },
          "authUserId": {
            "type": "integer",
            "format": "int64"
          },
          "certiNo": {
            "type": "string"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "gmtCreated": {
            "type": "string",
            "description": "创建时间",
            "format": "date-time"
          },
          "gmtModified": {
            "type": "string",
            "description": "更新时间",
            "format": "date-time"
          },
          "lastLoginIp": {
            "type": "string"
          },
          "lastLoginTime": {
            "type": "string",
            "format": "date-time"
          },
          "modifier": {
            "type": "string",
            "description": "更新认"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "roleIdList": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "roleInfoList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleInfoDTO"
            }
          },
          "roleName": {
            "type": "string",
            "description": "角色名称"
          },
          "salesChannelDataPermissionType": {
            "type": "string",
            "enum": [
              "ALL",
              "SELF_DEFINED"
            ]
          },
          "service": {
            "type": "string"
          },
          "showPrivacy": {
            "type": "integer",
            "format": "int32"
          },
          "tenantId": {
            "type": "integer",
            "format": "int64"
          },
          "userName": {
            "type": "string"
          },
          "userStatus": {
            "type": "string"
          },
          "validEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "validPwdStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "validStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "zhName": {
            "type": "string"
          }
        }
      },
      "UserLogVO": {
        "title": "UserLogVO",
        "type": "object",
        "properties": {
          "agencyId": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "ip": {
            "type": "string"
          },
          "isDeleted": {
            "type": "string"
          },
          "optDesc": {
            "type": "string"
          },
          "optResult": {
            "type": "string"
          },
          "optTime": {
            "type": "string",
            "description": "操作时间 yyyy-MM-dd HH:mm:ss"
          },
          "optType": {
            "type": "string"
          },
          "roleId": {
            "type": "string"
          },
          "roleName": {
            "type": "string"
          },
          "service": {
            "type": "string",
            "description": "所属系统"
          },
          "tenantId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "userName": {
            "type": "string"
          }
        }
      },
      "UserLoginQueryVO": {
        "title": "UserLoginQueryVO",
        "required": [
          "service",
          "userName"
        ],
        "type": "object",
        "properties": {
          "service": {
            "type": "string",
            "description": "所属系统"
          },
          "userName": {
            "type": "string",
            "description": "用户名"
          }
        }
      },
      "UserLoginVO": {
        "title": "UserLoginVO",
        "required": [
          "password",
          "service",
          "userName"
        ],
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "登录密码"
          },
          "service": {
            "type": "string",
            "description": "所属系统code basePlat(基础平台),saasTenant(SAAS租户平台),app(APP), channel(渠道)"
          },
          "userName": {
            "type": "string",
            "description": "用户名"
          }
        }
      },
      "UserReSetPwdVO": {
        "title": "UserReSetPwdVO",
        "required": [
          "password",
          "service",
          "userName"
        ],
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "登录密码"
          },
          "service": {
            "type": "string",
            "description": "所属系统"
          },
          "userName": {
            "type": "string",
            "description": "登录名"
          }
        }
      },
      "UserVO": {
        "title": "UserVO",
        "type": "object",
        "properties": {
          "agencyDataPermissionTypeEnum": {
            "type": "string",
            "enum": [
              "SAME_TO_ITS_AGENCY",
              "SELF_DEFINED"
            ]
          },
          "agencyId": {
            "type": "integer",
            "format": "int64"
          },
          "agencyLevel": {
            "type": "string"
          },
          "agencyName": {
            "type": "string"
          },
          "authAgencyIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "authUserId": {
            "type": "integer",
            "format": "int64"
          },
          "birth": {
            "type": "string",
            "format": "date-time"
          },
          "certiBackUrl": {
            "type": "string"
          },
          "certiHandHeldFrontUrl": {
            "type": "string"
          },
          "certiNo": {
            "type": "string"
          },
          "certiPositiveUrl": {
            "type": "string"
          },
          "channelType": {
            "type": "string"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyDTO"
          },
          "companyAddress": {
            "type": "string"
          },
          "companyId": {
            "type": "integer",
            "format": "int64"
          },
          "dataStatus": {
            "type": "string",
            "enum": [
              "CANCEL",
              "DELETE",
              "LOCK",
              "NORMAL",
              "UNKNOWN"
            ]
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "enName": {
            "type": "string"
          },
          "enableAssociatedSaleChannel": {
            "type": "boolean"
          },
          "enableTraceable": {
            "type": "boolean"
          },
          "enableVehicleKit": {
            "type": "boolean"
          },
          "gender": {
            "type": "string"
          },
          "gmtCreated": {
            "type": "string",
            "description": "创建时间",
            "format": "date-time"
          },
          "gmtModified": {
            "type": "string",
            "description": "更新时间",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "isLeader": {
            "type": "string"
          },
          "jobno": {
            "type": "string"
          },
          "lastLoginIp": {
            "type": "string"
          },
          "lastLoginTime": {
            "type": "string",
            "format": "date-time"
          },
          "modifier": {
            "type": "string",
            "description": "更新认"
          },
          "phone": {
            "type": "string",
            "description": "手机号"
          },
          "photo": {
            "type": "string"
          },
          "pid": {
            "type": "integer",
            "format": "int64"
          },
          "registerType": {
            "type": "string"
          },
          "remarks": {
            "type": "string"
          },
          "roleIdList": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "roleInfoList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleInfoDTO"
            }
          },
          "roleName": {
            "type": "string",
            "description": "账户角色"
          },
          "salesChannelCode": {
            "type": "string"
          },
          "salesChannelDataPermissionTypeEnum": {
            "type": "string",
            "enum": [
              "ALL",
              "SELF_DEFINED"
            ]
          },
          "salesChannelId": {
            "type": "integer",
            "format": "int64"
          },
          "salesChannelLevel": {
            "type": "integer",
            "format": "int32"
          },
          "salesChannelName": {
            "type": "string"
          },
          "service": {
            "type": "string"
          },
          "showPrivacy": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "integer",
            "format": "int32"
          },
          "subAgencyId": {
            "type": "integer",
            "format": "int64"
          },
          "tenantCode": {
            "type": "integer",
            "format": "int64"
          },
          "tenantId": {
            "type": "integer",
            "format": "int64"
          },
          "tenantPermission": {
            "type": "integer",
            "format": "int32"
          },
          "token": {
            "type": "string"
          },
          "tokenValidInterval": {
            "type": "integer",
            "format": "int64"
          },
          "userName": {
            "type": "string",
            "description": "登录账号"
          },
          "userStatus": {
            "type": "string",
            "description": "账户状态 0.启用 1.停用"
          },
          "validEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "validPwdStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "validStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "workPhone": {
            "type": "string"
          },
          "zhName": {
            "type": "string",
            "description": "使用人"
          }
        }
      },
      "post请求分页VO": {
        "title": "post请求分页VO",
        "required": [
          "pageNum",
          "pageSize"
        ],
        "type": "object",
        "properties": {
          "menuType": {
            "type": "integer",
            "description": "1.菜单 2.按钮 3.api，如果查全部，则不传",
            "format": "int32"
          },
          "mobile": {
            "type": "string",
            "description": "用户手机号"
          },
          "name": {
            "type": "string",
            "description": "用户姓名"
          },
          "pageNum": {
            "type": "integer",
            "description": "当前页数",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "每页大小",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "用户账号"
          },
          "userStatus": {
            "type": "string",
            "description": "账户状态 0.启用 1.停用"
          }
        }
      }
    }
  }
}